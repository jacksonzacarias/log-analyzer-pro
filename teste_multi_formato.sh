#!/bin/bash

# ===================================================================================
# Script de Teste Multi-Formato - Demonstra√ß√£o das Funcionalidades
# Testa todos os formatos de log suportados pelo script avan√ßado
# ===================================================================================

# Cores
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
CYAN="\e[36m"
BOLD="\e[1m"
RESET="\e[0m"

echo -e "${BOLD}${CYAN}üß™ TESTE MULTI-FORMATO - SCRIPT AVAN√áADO v4.0${RESET}"
echo -e "${BOLD}${CYAN}=============================================${RESET}"
echo

# Lista de arquivos para testar
declare -a log_files=(
  "apache2_access.log"
  "tentivas-sshubuntu-debian-auth.log"
  "mysql.log"
  "nginx_error.log"
  "nginx_access.log"
)

# Fun√ß√£o para testar um arquivo
test_file() {
  local file="$1"
  echo -e "${BOLD}${BLUE}üìÅ Testando: $file${RESET}"
  echo -e "${BLUE}${BOLD}================================${RESET}"
  
  if [[ ! -f "$file" ]]; then
    echo -e "${RED}‚ùå Arquivo n√£o encontrado: $file${RESET}"
    echo
    return
  fi
  
  # Verifica se o arquivo est√° vazio
  if [[ ! -s "$file" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Arquivo vazio: $file${RESET}"
    echo
    return
  fi
  
  # Executa an√°lise b√°sica
  echo -e "${CYAN}üîç Executando an√°lise b√°sica...${RESET}"
  bash scriptlogs_avancado.sh "$file" 2>/dev/null
  
  echo
  echo -e "${CYAN}üîç Executando an√°lise completa...${RESET}"
  bash scriptlogs_avancado.sh -v -t -aR -gT -pedago -pcn -peso -correl "$file" 2>/dev/null
  
  echo
  echo -e "${GREEN}${BOLD}‚úÖ Teste conclu√≠do para: $file${RESET}"
  echo -e "${BLUE}${BOLD}================================${RESET}"
  echo
}

# Fun√ß√£o para mostrar resumo
show_summary() {
  echo -e "${BOLD}${CYAN}üìä RESUMO DOS TESTES${RESET}"
  echo -e "${BOLD}${CYAN}===================${RESET}"
  echo
  
  for file in "${log_files[@]}"; do
    if [[ -f "$file" ]]; then
      if [[ -s "$file" ]]; then
        echo -e "${GREEN}‚úÖ $file - Arquivo v√°lido${RESET}"
      else
        echo -e "${YELLOW}‚ö†Ô∏è  $file - Arquivo vazio${RESET}"
      fi
    else
      echo -e "${RED}‚ùå $file - Arquivo n√£o encontrado${RESET}"
    fi
  done
  
  echo
  echo -e "${BOLD}${CYAN}üéØ FORMATOS SUPORTADOS:${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Apache Access Log${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}SSH Auth Log${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}MySQL Log${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Nginx Error Log${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Nginx Access Log${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Logs Customizados${RESET}"
  echo
  echo -e "${BOLD}${CYAN}üîß FUNCIONALIDADES:${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Detec√ß√£o autom√°tica de formato${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Normaliza√ß√£o de logs${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Classifica√ß√£o por peso de amea√ßa${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}An√°lise temporal${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Correla√ß√£o de eventos${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Geolocaliza√ß√£o de IPs${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Recomenda√ß√µes de seguran√ßa${RESET}"
  echo -e "  ‚Ä¢ ${GREEN}Plano de continuidade${RESET}"
  echo
}

# Execu√ß√£o principal
echo -e "${BOLD}${YELLOW}üöÄ Iniciando testes multi-formato...${RESET}"
echo

# Testa cada arquivo
for file in "${log_files[@]}"; do
  test_file "$file"
done

# Mostra resumo
show_summary

echo -e "${GREEN}${BOLD}${BLINK}üéâ Todos os testes conclu√≠dos!${RESET}"
echo -e "${CYAN}${BOLD}üìã O script agora suporta m√∫ltiplos formatos de log automaticamente.${RESET}" 