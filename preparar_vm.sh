#!/bin/bash

# ===================================================================================
# PREPARA√á√ÉO PARA VM - SISTEMA DE AN√ÅLISE DE LOGS
# ===================================================================================
# Script para preparar o projeto para uso na VM do Kali Linux
# Autor: Jackson Savoldi | ACADe-TI - Aula 04
# ===================================================================================

# Cores para output
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
CYAN="\e[36m"
WHITE="\e[37m"
BOLD="\e[1m"
RESET="\e[0m"

echo -e "${BOLD}${CYAN}üöÄ PREPARANDO PROJETO PARA VM DO KALI LINUX${RESET}"
echo -e "${BOLD}${CYAN}============================================${RESET}"

# Detec√ß√£o do diret√≥rio raiz
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR" && pwd)"

echo -e "${BOLD}${YELLOW}üìÅ Diret√≥rio do projeto: $PROJECT_ROOT${RESET}"

# Passo 1: Recriar configura√ß√£o din√¢mica
echo -e "\n${BOLD}${YELLOW}üîß Passo 1: Recriando configura√ß√£o din√¢mica${RESET}"
if [[ -f "$PROJECT_ROOT/src/scripts/utils/create_config.sh" ]]; then
    bash "$PROJECT_ROOT/src/scripts/utils/create_config.sh"
    if [[ $? -eq 0 ]]; then
        echo -e "${GREEN}‚úÖ Configura√ß√£o recriada com sucesso${RESET}"
    else
        echo -e "${RED}‚ùå Falha ao recriar configura√ß√£o${RESET}"
        exit 1
    fi
else
    echo -e "${RED}‚ùå Script create_config.sh n√£o encontrado${RESET}"
    exit 1
fi

# Passo 2: Dar permiss√µes de execu√ß√£o
echo -e "\n${BOLD}${YELLOW}üîê Passo 2: Configurando permiss√µes de execu√ß√£o${RESET}"
find "$PROJECT_ROOT" -name "*.sh" -type f -exec chmod +x {} \;
echo -e "${GREEN}‚úÖ Permiss√µes de execu√ß√£o configuradas${RESET}"

# Passo 3: Criar estrutura de diret√≥rios
echo -e "\n${BOLD}${YELLOW}üìÇ Passo 3: Criando estrutura de diret√≥rios${RESET}"
if [[ -f "$PROJECT_ROOT/scripts/criar_estrutura.sh" ]]; then
    bash "$PROJECT_ROOT/scripts/criar_estrutura.sh"
    if [[ $? -eq 0 ]]; then
        echo -e "${GREEN}‚úÖ Estrutura de diret√≥rios criada${RESET}"
    else
        echo -e "${RED}‚ùå Falha ao criar estrutura${RESET}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  Script criar_estrutura.sh n√£o encontrado${RESET}"
fi

# Passo 4: Verificar estrutura
echo -e "\n${BOLD}${YELLOW}üîç Passo 4: Verificando estrutura do projeto${RESET}"
if [[ -f "$PROJECT_ROOT/scripts/verificar_estrutura.sh" ]]; then
    bash "$PROJECT_ROOT/scripts/verificar_estrutura.sh"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Script verificar_estrutura.sh n√£o encontrado${RESET}"
fi

# Passo 5: Testar portabilidade
echo -e "\n${BOLD}${YELLOW}üåç Passo 5: Testando portabilidade${RESET}"
if [[ -f "$PROJECT_ROOT/teste_portabilidade.sh" ]]; then
    bash "$PROJECT_ROOT/teste_portabilidade.sh"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Script teste_portabilidade.sh n√£o encontrado${RESET}"
fi

# Passo 6: Criar arquivo de instru√ß√µes para VM
echo -e "\n${BOLD}${YELLOW}üìù Passo 6: Criando instru√ß√µes para VM${RESET}"
INSTRUCTIONS_FILE="$PROJECT_ROOT/INSTRUCOES_VM.md"

cat > "$INSTRUCTIONS_FILE" << 'EOF'
# INSTRU√á√ïES PARA USO NA VM DO KALI LINUX

## Pr√©-requisitos
- Kali Linux instalado no VirtualBox
- Git instalado: `sudo apt update && sudo apt install git`
- Ferramentas b√°sicas: `sudo apt install curl wget jq`

## Passos para configura√ß√£o

### 1. Clonar ou copiar o projeto
```bash
# Se usando git:
git clone <URL_DO_REPOSITORIO>
cd logs

# Se copiando arquivos:
# Copie toda a pasta do projeto para a VM
cd /caminho/para/o/projeto
```

### 2. Configurar permiss√µes
```bash
chmod +x *.sh
chmod +x scripts/*.sh
chmod +x src/scripts/**/*.sh
```

### 3. Executar prepara√ß√£o
```bash
./preparar_vm.sh
```

### 4. Testar o sistema
```bash
./iniciar_projeto.sh
```

### 5. Executar an√°lise de logs
```bash
# An√°lise b√°sica
./src/scripts/core/scriptlogs.sh

# An√°lise avan√ßada
./src/scripts/core/scriptlogs_avancado.sh

# An√°lise sem jq (para sistemas sem jq)
./src/scripts/core/scriptlogs_sem_jq.sh
```

## Estrutura do projeto
- `analogs/` - Logs para an√°lise
- `config/` - Arquivos de configura√ß√£o
- `src/scripts/core/` - Scripts principais
- `results/` - Resultados das an√°lises
- `docs/` - Documenta√ß√£o

## Troubleshooting
- Se houver problemas de permiss√£o: `chmod +x *.sh`
- Se faltar jq: `sudo apt install jq`
- Se faltar curl: `sudo apt install curl`
- Para ver logs de erro: `tail -f logs/error.log`

## Comandos √∫teis
```bash
# Verificar estrutura
./scripts/verificar_estrutura.sh

# Criar estrutura ausente
./scripts/criar_estrutura.sh

# Testar portabilidade
./teste_portabilidade.sh

# Navegar no projeto
./navegar_projeto.sh
```
EOF

echo -e "${GREEN}‚úÖ Instru√ß√µes criadas: $INSTRUCTIONS_FILE${RESET}"

# Resumo final
echo -e "\n${BOLD}${CYAN}üìä RESUMO DA PREPARA√á√ÉO${RESET}"
echo -e "${BOLD}${CYAN}========================${RESET}"
echo -e "${GREEN}‚úÖ Projeto preparado para VM do Kali Linux${RESET}"
echo -e "${GREEN}‚úÖ Configura√ß√£o din√¢mica criada${RESET}"
echo -e "${GREEN}‚úÖ Permiss√µes configuradas${RESET}"
echo -e "${GREEN}‚úÖ Estrutura verificada${RESET}"
echo -e "${GREEN}‚úÖ Instru√ß√µes criadas${RESET}"

echo -e "\n${BOLD}${BLUE}üöÄ PR√ìXIMOS PASSOS:${RESET}"
echo -e "1. Copie toda a pasta do projeto para a VM do Kali Linux"
echo -e "2. Na VM, execute: cd /caminho/para/o/projeto"
echo -e "3. Execute: ./preparar_vm.sh"
echo -e "4. Execute: ./iniciar_projeto.sh"
echo -e "5. Teste os scripts de an√°lise"

echo -e "\n${BOLD}${GREEN}üéâ PROJETO PRONTO PARA USO NA VM!${RESET}" 