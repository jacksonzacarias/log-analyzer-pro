#!/bin/bash

# ===================================================================================
# NAVEGADOR INTERATIVO DO PROJETO - LOG ANALYZER PRO
# ===================================================================================
# Sistema de navega√ß√£o interativa com menus e comandos r√°pidos
# Autor: Jackson Savoldi | ACADe-TI - Aula 04
# ===================================================================================

# Cores para output
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
CYAN="\e[36m"
WHITE="\e[37m"
BOLD="\e[1m"
RESET="\e[0m"

# Detec√ß√£o do diret√≥rio raiz
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR" && pwd)"

# Carregar configura√ß√£o
if [[ -f "$PROJECT_ROOT/config/paths.conf" ]]; then
    source "$PROJECT_ROOT/config/paths.conf"
else
    echo -e "${RED}‚ùå Arquivo de configura√ß√£o n√£o encontrado${RESET}"
    exit 1
fi

# Fun√ß√£o para limpar tela
clear_screen() {
    clear
}

# Fun√ß√£o para mostrar cabe√ßalho
show_header() {
    clear_screen
    echo -e "${BOLD}${CYAN}üóÇÔ∏è  NAVEGADOR INTERATIVO DO PROJETO${RESET}"
    echo -e "${BOLD}${CYAN}=====================================${RESET}"
    echo -e "${BOLD}üìÅ Diret√≥rio atual: $PROJECT_ROOT${RESET}"
    echo ""
}

# Fun√ß√£o para navegar diret√≥rios
navigate_directories() {
    while true; do
        show_header
        echo -e "${BOLD}${YELLOW}üìÅ NAVEGA√á√ÉO DE DIRET√ìRIOS${RESET}"
        echo -e "${BOLD}${YELLOW}========================${RESET}"
        echo ""
        
        echo -e "${BOLD}üìÇ DIRET√ìRIOS PRINCIPAIS:${RESET}"
        echo -e "${GREEN}1)${RESET} üìÅ src/scripts/     - Scripts principais do sistema"
        echo -e "${GREEN}2)${RESET} üìÅ tests/           - Scripts de teste"
        echo -e "${GREEN}3)${RESET} üìÅ config/          - Configura√ß√µes"
        echo -e "${GREEN}4)${RESET} üìÅ analogs/         - Todos os logs organizados"
        echo -e "${GREEN}5)${RESET} üìÅ system/data/     - Dados e CSV"
        echo -e "${GREEN}6)${RESET} üìÅ results/         - Resultados de testes"
        echo -e "${GREEN}7)${RESET} üìÅ docs/            - Documenta√ß√£o"
        echo -e "${GREEN}8)${RESET} üìÅ payloads/        - Payloads de ataque"
        echo -e "${GREEN}9)${RESET} üìÅ temp/            - Arquivos tempor√°rios"
        echo -e "${GREEN}10)${RESET} üìÅ logs/           - Logs do sistema"
        echo ""
        echo -e "${GREEN}0)${RESET} üîô Voltar ao menu principal"
        echo ""
        
        read -p "Escolha um diret√≥rio (0-10): " choice
        
        case $choice in
            1) cd "$SRC_SCRIPTS_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            2) cd "$TESTS_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            3) cd "$CONFIG_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            4) cd "$ANALOGS_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            5) cd "$SYSTEM_DATA_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            6) cd "$RESULTS_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            7) cd "$DOCS_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            8) cd "$PAYLOADS_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            9) cd "$TEMP_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            10) cd "$LOGS_DIR" && echo -e "${GREEN}‚úÖ Navegando para: $(pwd)${RESET}" && sleep 2 ;;
            0) break ;;
            *) echo -e "${RED}‚ùå Op√ß√£o inv√°lida${RESET}" && sleep 2 ;;
        esac
    done
}

# Fun√ß√£o para buscar arquivos
search_files() {
    show_header
    echo -e "${BOLD}${YELLOW}üîç BUSCA DE ARQUIVOS${RESET}"
    echo -e "${BOLD}${YELLOW}==================${RESET}"
    echo ""
    
    read -p "Digite o termo de busca: " search_term
    
    if [[ -n "$search_term" ]]; then
        echo -e "${CYAN}üîç Buscando por: $search_term${RESET}"
        echo ""
        
        # Buscar em todo o projeto
        find "$PROJECT_ROOT" -name "*$search_term*" -type f 2>/dev/null | head -20
        
        echo ""
        echo -e "${YELLOW}‚ö†Ô∏è  Mostrando apenas os primeiros 20 resultados${RESET}"
    fi
    
    echo ""
    read -p "Pressione ENTER para continuar..."
}

# Fun√ß√£o para comandos r√°pidos
quick_commands() {
    while true; do
        show_header
        echo -e "${BOLD}${YELLOW}üöÄ COMANDOS R√ÅPIDOS${RESET}"
        echo -e "${BOLD}${YELLOW}=================${RESET}"
        echo ""
        
        echo -e "${BOLD}üìã COMANDOS DISPON√çVEIS:${RESET}"
        echo -e "${GREEN}1)${RESET} üß™ Executar teste de portabilidade"
        echo -e "${GREEN}2)${RESET} üìä Verificar estrutura do projeto"
        echo -e "${GREEN}3)${RESET} üîß Criar estrutura ausente"
        echo -e "${GREEN}4)${RESET} üìù Ver README principal"
        echo -e "${GREEN}5)${RESET} üìö Ver documenta√ß√£o do usu√°rio"
        echo -e "${GREEN}6)${RESET} üîç Listar logs dispon√≠veis"
        echo -e "${GREEN}7)${RESET} üìà Ver resultados de testes"
        echo -e "${GREEN}8)${RESET} ‚öôÔ∏è Ver configura√ß√µes"
        echo ""
        echo -e "${GREEN}0)${RESET} üîô Voltar ao menu principal"
        echo ""
        
        read -p "Escolha um comando (0-8): " choice
        
        case $choice in
            1) 
                echo -e "${CYAN}üß™ Executando teste de portabilidade...${RESET}"
                bash "$PROJECT_ROOT/teste_portabilidade.sh"
                echo ""
                read -p "Pressione ENTER para continuar..."
                ;;
            2)
                echo -e "${CYAN}üìä Verificando estrutura...${RESET}"
                bash "$PROJECT_ROOT/scripts/verificar_estrutura.sh"
                echo ""
                read -p "Pressione ENTER para continuar..."
                ;;
            3)
                echo -e "${CYAN}üîß Criando estrutura...${RESET}"
                bash "$PROJECT_ROOT/scripts/criar_estrutura.sh"
                echo ""
                read -p "Pressione ENTER para continuar..."
                ;;
            4)
                echo -e "${CYAN}üìù Mostrando README...${RESET}"
                if [[ -f "$PROJECT_ROOT/docs/user/README.md" ]]; then
                    cat "$PROJECT_ROOT/docs/user/README.md" | head -50
                else
                    echo -e "${RED}‚ùå README n√£o encontrado${RESET}"
                fi
                echo ""
                read -p "Pressione ENTER para continuar..."
                ;;
            5)
                echo -e "${CYAN}üìö Abrindo documenta√ß√£o...${RESET}"
                ls -la "$DOCS_USER_DIR"
                echo ""
                read -p "Pressione ENTER para continuar..."
                ;;
            6)
                echo -e "${CYAN}üîç Listando logs...${RESET}"
                find "$ANALOGS_DIR" -name "*.log" | head -20
                echo ""
                read -p "Pressione ENTER para continuar..."
                ;;
            7)
                echo -e "${CYAN}üìà Verificando resultados...${RESET}"
                ls -la "$RESULTS_DIR"
                echo ""
                read -p "Pressione ENTER para continuar..."
                ;;
            8)
                echo -e "${CYAN}‚öôÔ∏è Verificando configura√ß√µes...${RESET}"
                ls -la "$CONFIG_DIR"
                echo ""
                read -p "Pressione ENTER para continuar..."
                ;;
            0) break ;;
            *) echo -e "${RED}‚ùå Op√ß√£o inv√°lida${RESET}" && sleep 2 ;;
        esac
    done
}

# Fun√ß√£o para ver estat√≠sticas
show_statistics() {
    show_header
    echo -e "${BOLD}${YELLOW}üìä ESTAT√çSTICAS DO PROJETO${RESET}"
    echo -e "${BOLD}${YELLOW}==========================${RESET}"
    echo ""
    
    echo -e "${BOLD}üìÅ ESTRUTURA:${RESET}"
    echo -e "‚Ä¢ Scripts principais: $(ls $SRC_CORE_DIR/*.sh 2>/dev/null | wc -l)"
    echo -e "‚Ä¢ Testes unit√°rios: $(ls $TESTS_UNIT_DIR/*.sh 2>/dev/null | wc -l)"
    echo -e "‚Ä¢ Testes integra√ß√£o: $(ls $TESTS_INTEGRATION_DIR/*.sh 2>/dev/null | wc -l)"
    echo -e "‚Ä¢ Testes performance: $(ls $TESTS_PERFORMANCE_DIR/*.sh 2>/dev/null | wc -l)"
    echo ""
    
    echo -e "${BOLD}üìÑ ARQUIVOS:${RESET}"
    echo -e "‚Ä¢ Logs realistas: $(find $ANALOGS_DIR -name "*.log" | wc -l)"
    echo -e "‚Ä¢ Documenta√ß√£o usu√°rio: $(ls $DOCS_USER_DIR/*.md 2>/dev/null | wc -l)"
    echo -e "‚Ä¢ Documenta√ß√£o dev: $(ls $DOCS_DEVELOPER_DIR/*.md 2>/dev/null | wc -l)"
    echo -e "‚Ä¢ Configura√ß√µes: $(ls $CONFIG_DIR/*.conf 2>/dev/null | wc -l)"
    echo ""
    
    echo -e "${BOLD}üíæ ESPA√áO EM DISCO:${RESET}"
    du -sh "$PROJECT_ROOT" 2>/dev/null | awk '{print "‚Ä¢ Projeto total: " $1}'
    echo ""
    
    read -p "Pressione ENTER para continuar..."
}

# Fun√ß√£o para configura√ß√µes
show_configurations() {
    show_header
    echo -e "${BOLD}${YELLOW}‚öôÔ∏è CONFIGURA√á√ïES DO SISTEMA${RESET}"
    echo -e "${BOLD}${YELLOW}==========================${RESET}"
    echo ""
    
    echo -e "${BOLD}üìÅ DIRET√ìRIOS PRINCIPAIS:${RESET}"
    echo -e "‚Ä¢ Projeto raiz: $PROJECT_ROOT"
    echo -e "‚Ä¢ Configura√ß√µes: $CONFIG_DIR"
    echo -e "‚Ä¢ Scripts: $SRC_SCRIPTS_DIR"
    echo -e "‚Ä¢ Logs: $ANALOGS_DIR"
    echo -e "‚Ä¢ Resultados: $RESULTS_DIR"
    echo ""
    
    echo -e "${BOLD}üìÑ ARQUIVOS DE CONFIGURA√á√ÉO:${RESET}"
    ls -la "$CONFIG_DIR"
    echo ""
    
    echo -e "${BOLD}üîß PERMISS√ïES:${RESET}"
    echo -e "‚Ä¢ Scripts execut√°veis: $(find "$PROJECT_ROOT" -name "*.sh" -executable | wc -l)"
    echo -e "‚Ä¢ Total de scripts: $(find "$PROJECT_ROOT" -name "*.sh" | wc -l)"
    echo ""
    
    read -p "Pressione ENTER para continuar..."
}

# Menu principal
main_menu() {
    while true; do
        show_header
        echo -e "${BOLD}${CYAN}MENU PRINCIPAL${RESET}"
        echo -e "${BOLD}${CYAN}=============${RESET}"
        echo ""
        
        echo -e "${GREEN}1)${RESET} üìÅ Navegar diret√≥rios"
        echo -e "${GREEN}2)${RESET} üîç Buscar arquivos"
        echo -e "${GREEN}3)${RESET} üöÄ Comandos r√°pidos"
        echo -e "${GREEN}4)${RESET} üìä Ver estat√≠sticas"
        echo -e "${GREEN}5)${RESET} ‚öôÔ∏è Configura√ß√µes"
        echo ""
        echo -e "${GREEN}0)${RESET} üö™ Sair"
        echo ""
        
        read -p "Escolha uma op√ß√£o (0-5): " choice
        
        case $choice in
            1) navigate_directories ;;
            2) search_files ;;
            3) quick_commands ;;
            4) show_statistics ;;
            5) show_configurations ;;
            0) 
                echo -e "${GREEN}üëã Saindo do navegador...${RESET}"
                exit 0
                ;;
            *) 
                echo -e "${RED}‚ùå Op√ß√£o inv√°lida${RESET}"
                sleep 2
                ;;
        esac
    done
}

# Iniciar navegador
main_menu
