#!/bin/bash

# ===================================================================================
# TESTE DE PORTABILIDADE - SISTEMA DE AN√ÅLISE DE LOGS
# ===================================================================================
# Script para testar se o projeto funciona em qualquer ambiente
# Autor: Jackson Savoldi | ACADe-TI - Aula 04
# ===================================================================================

# Cores para output
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
CYAN="\e[36m"
WHITE="\e[37m"
BOLD="\e[1m"
RESET="\e[0m"

echo -e "${BOLD}${CYAN}üåç TESTE DE PORTABILIDADE DO PROJETO${RESET}"
echo -e "${BOLD}${CYAN}=====================================${RESET}"

# Teste 1: Detec√ß√£o do diret√≥rio raiz
echo -e "\n${BOLD}${YELLOW}üìÅ Teste 1: Detec√ß√£o do diret√≥rio raiz${RESET}"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR" && pwd)"

echo -e "‚Ä¢ Script executado em: $SCRIPT_DIR"
echo -e "‚Ä¢ Diret√≥rio raiz detectado: $PROJECT_ROOT"

if [[ -f "$PROJECT_ROOT/config/paths.conf" ]]; then
    echo -e "${GREEN}‚úÖ Arquivo de configura√ß√£o encontrado${RESET}"
else
    echo -e "${RED}‚ùå Arquivo de configura√ß√£o n√£o encontrado${RESET}"
    exit 1
fi

# Teste 2: Carregamento da configura√ß√£o
echo -e "\n${BOLD}${YELLOW}‚öôÔ∏è  Teste 2: Carregamento da configura√ß√£o${RESET}"
source "$PROJECT_ROOT/config/paths.conf"

if [[ -n "$PROJECT_ROOT" ]]; then
    echo -e "${GREEN}‚úÖ Vari√°vel PROJECT_ROOT carregada: $PROJECT_ROOT${RESET}"
else
    echo -e "${RED}‚ùå Falha ao carregar PROJECT_ROOT${RESET}"
    exit 1
fi

# Teste 3: Verifica√ß√£o de diret√≥rios essenciais
echo -e "\n${BOLD}${YELLOW}üìÇ Teste 3: Verifica√ß√£o de diret√≥rios essenciais${RESET}"
essential_dirs=(
    "$CONFIG_DIR"
    "$SRC_DIR"
    "$ANALOGS_DIR"
    "$RESULTS_DIR"
    "$SYSTEM_DIR"
    "$PAYLOADS_DIR"
    "$TEMP_DIR"
    "$DOCS_DIR"
    "$TESTS_DIR"
    "$SCRIPTS_DIR"
)

missing_dirs=()
for dir in "${essential_dirs[@]}"; do
    if [[ -d "$dir" ]]; then
        echo -e "${GREEN}‚úÖ $dir${RESET}"
    else
        echo -e "${RED}‚ùå $dir${RESET}"
        missing_dirs+=("$dir")
    fi
done

if [[ ${#missing_dirs[@]} -gt 0 ]]; then
    echo -e "\n${YELLOW}‚ö†Ô∏è  Diret√≥rios ausentes: ${missing_dirs[*]}${RESET}"
    echo -e "${BLUE}üí° Execute: ./scripts/criar_estrutura.sh${RESET}"
else
    echo -e "\n${GREEN}‚úÖ Todos os diret√≥rios essenciais encontrados${RESET}"
fi

# Teste 4: Verifica√ß√£o de scripts principais
echo -e "\n${BOLD}${YELLOW}üîß Teste 4: Verifica√ß√£o de scripts principais${RESET}"
main_scripts=(
    "$SRC_SCRIPTS_DIR/core/scriptlogs.sh"
    "$SRC_SCRIPTS_DIR/core/scriptlogs_avancado.sh"
    "$SRC_SCRIPTS_DIR/core/scriptlogs_sem_jq.sh"
    "$SRC_SCRIPTS_DIR/utils/config_loader.sh"
    "$SRC_SCRIPTS_DIR/utils/create_config.sh"
)

for script in "${main_scripts[@]}"; do
    if [[ -f "$script" ]]; then
        echo -e "${GREEN}‚úÖ $(basename "$script")${RESET}"
    else
        echo -e "${RED}‚ùå $(basename "$script")${RESET}"
    fi
done

# Teste 5: Verifica√ß√£o de permiss√µes de execu√ß√£o
echo -e "\n${BOLD}${YELLOW}üîê Teste 5: Verifica√ß√£o de permiss√µes${RESET}"
for script in "${main_scripts[@]}"; do
    if [[ -f "$script" && -x "$script" ]]; then
        echo -e "${GREEN}‚úÖ $(basename "$script") - Execut√°vel${RESET}"
    elif [[ -f "$script" ]]; then
        echo -e "${YELLOW}‚ö†Ô∏è  $(basename "$script") - N√£o execut√°vel${RESET}"
    fi
done

# Teste 6: Teste do carregador de configura√ß√£o
echo -e "\n${BOLD}${YELLOW}üîÑ Teste 6: Teste do carregador de configura√ß√£o${RESET}"
if [[ -f "$SRC_SCRIPTS_DIR/utils/config_loader.sh" ]]; then
    source "$SRC_SCRIPTS_DIR/utils/config_loader.sh"
    if initialize_system "false"; then
        echo -e "${GREEN}‚úÖ Sistema inicializado com sucesso${RESET}"
    else
        echo -e "${RED}‚ùå Falha na inicializa√ß√£o do sistema${RESET}"
    fi
else
    echo -e "${RED}‚ùå Carregador de configura√ß√£o n√£o encontrado${RESET}"
fi

# Resumo final
echo -e "\n${BOLD}${CYAN}üìä RESUMO DO TESTE DE PORTABILIDADE${RESET}"
echo -e "${BOLD}${CYAN}=====================================${RESET}"

if [[ ${#missing_dirs[@]} -eq 0 ]]; then
    echo -e "${GREEN}‚úÖ PROJETO PRONTO PARA USO${RESET}"
    echo -e "${GREEN}‚úÖ Todos os componentes essenciais est√£o presentes${RESET}"
    echo -e "${GREEN}‚úÖ Configura√ß√£o carregada corretamente${RESET}"
    echo -e "${GREEN}‚úÖ Pronto para testar na VM do Kali Linux${RESET}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  PROJETO PRECISA DE AJUSTES${RESET}"
    echo -e "${YELLOW}‚ö†Ô∏è  Execute: ./scripts/criar_estrutura.sh${RESET}"
fi

echo -e "\n${BOLD}${BLUE}üöÄ Pr√≥ximos passos:${RESET}"
echo -e "1. Copie o projeto para a VM do Kali Linux"
echo -e "2. Execute: chmod +x *.sh"
echo -e "3. Execute: ./scripts/criar_estrutura.sh"
echo -e "4. Execute: ./iniciar_projeto.sh"
echo -e "5. Teste os scripts principais" 